# Generated by Django 4.2.13 on 2024-06-27 20:37

from django.db import migrations, models
import uuid

def gen_uuid(apps, schema_editor):
    LogEntry = apps.get_model('admin', 'LogEntry')
    User = apps.get_model('users', 'User')  # Adjust this if your User model is in a different app
    for log_entry in LogEntry.objects.all():
        try:
            user = User.objects.get(id=log_entry.user_id)
            log_entry.user_id = user.id  # This should now be a UUID
            log_entry.save(update_fields=['user_id'])
        except User.DoesNotExist:
            # Handle cases where the user no longer exists
            log_entry.delete()


class Migration(migrations.Migration):

    dependencies = [
        ('admin', '__latest__'),
        ('users', '0001_initial'),
    ]

    operations = [
        # Drop the existing foreign key constraint
        migrations.RunSQL(
            sql='ALTER TABLE django_admin_log DROP CONSTRAINT IF EXISTS django_admin_log_user_id_c564eba6_fk_auth_user_id;',
            reverse_sql=''  # No reverse operation needed
        ),
        # Change the column type
        migrations.RunSQL(
            sql='ALTER TABLE django_admin_log ALTER COLUMN user_id TYPE uuid USING NULL;',
            reverse_sql='ALTER TABLE django_admin_log ALTER COLUMN user_id TYPE integer USING user_id::text::integer;'
        ),
        # Run Python function to update UUIDs
        migrations.RunPython(gen_uuid),
        # Add the new foreign key constraint
        migrations.RunSQL(
            sql='ALTER TABLE django_admin_log ADD CONSTRAINT django_admin_log_user_id_fk FOREIGN KEY (user_id) REFERENCES users_user(id) ON DELETE CASCADE;',
            reverse_sql='ALTER TABLE django_admin_log DROP CONSTRAINT django_admin_log_user_id_fk;'
        ),
    ]
